@page "/ScoreCollection"

<MudContainer MaxWidth="MaxWidth.Medium">
    @if (ViewModel.AvailablePlayers != null)
    {
        <div class="d-flex flex-column gap-2 mt-5 mb-8">
            <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined" Class="align-self-end" Size="Size.Medium" OverrideStyles="false">
                <MudButton EndIcon="@Icons.Material.Filled.Save" Variant="Variant.Filled" Color="Color.Primary" OnClick="() => ViewModel.SaveMatch()">Save</MudButton>
                <MudIconButton Icon="@Icons.Material.Filled.AutoFixHigh" Color="Color.Primary" Variant="Variant.Outlined" OnClick="() => ViewModel.BalanceMatch()"></MudIconButton>
                <MudMenu Icon="@Icons.Material.Filled.ArrowDropDown" AnchorOrigin="Origin.TopRight">
                    <MudMenuItem OnClick="ViewModel.SessionMenuClicked">@ViewModel.GetSessionMenuText()</MudMenuItem>
                    <MudMenuItem OnClick="ViewModel.InactivePlayerMenuClicked">@ViewModel.GetInactivePlayerMenuText()</MudMenuItem>
                </MudMenu>
            </MudButtonGroup>
            <MudSelect FullWidth="true" T="Player" Class="mt-0 flex-grow-1" Label="Players at the table" MultiSelection="true" SelectedValues="ViewModel.SelectedPlayers" SelectedValuesChanged="ViewModel.HandleSelectedPlayersChanged" Variant="Variant.Filled">
                @foreach (var player in ViewModel.AvailablePlayers)
                {
                    <MudSelectItem T="Player" Value="@player">@player.Name</MudSelectItem>
                }
            </MudSelect>
        </div>
    }

    @if (ViewModel.SelectedPlayers != null && ViewModel.SelectedPlayers.Any())
    {
        <TeamCard PlayersList="ViewModel.SelectedPlayers.OrderBy(x => x.Name)" TeamInfo="ViewModel.GreyTeam" TeamInfoChanged="ViewModel.TeamInfoChanged"/>
        <TeamCard PlayersList="ViewModel.SelectedPlayers.OrderBy(x => x.Name)" TeamInfo="ViewModel.BlackTeam" IsFlipped="true" Type="TeamCardType.Dark" TeamInfoChanged="ViewModel.TeamInfoChanged"/>
    }
</MudContainer>