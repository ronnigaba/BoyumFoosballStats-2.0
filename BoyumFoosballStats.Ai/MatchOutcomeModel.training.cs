﻿// This file was auto-generated by ML.NET Model Builder. 
using Microsoft.ML.Trainers.LightGbm;
using Microsoft.ML;

namespace BoyumFoosballStats_Ai
{
    public partial class MatchOutcomeModel
    {
        public static ITransformer RetrainPipeline(MLContext context, IDataView trainData)
        {
            var pipeline = BuildPipeline(context);
            var model = pipeline.Fit(trainData);

            return model;
        }

        /// <summary>
        /// build the pipeline that is used from model builder. Use this function to retrain model.
        /// </summary>
        /// <param name="mlContext"></param>
        /// <returns></returns>
        public static IEstimator<ITransformer> BuildPipeline(MLContext mlContext)
        {
            // Data process configuration with pipeline data transformations
            var pipeline = mlContext.Transforms.ReplaceMissingValues(new []{new InputOutputColumnPair(@"GrayDefender", @"GrayDefender"),new InputOutputColumnPair(@"GrayAttacker", @"GrayAttacker"),new InputOutputColumnPair(@"BlackDefender", @"BlackDefender"),new InputOutputColumnPair(@"BlackAttacker", @"BlackAttacker")})      
                                    .Append(mlContext.Transforms.Concatenate(@"Features", new []{@"GrayDefender",@"GrayAttacker",@"BlackDefender",@"BlackAttacker"}))      
                                    .Append(mlContext.Regression.Trainers.LightGbm(new LightGbmRegressionTrainer.Options(){NumberOfLeaves=34,MinimumExampleCountPerLeaf=20,NumberOfIterations=52,MaximumBinCountPerFeature=70,LearningRate=0.29463480952307F,LabelColumnName=@"Label",FeatureColumnName=@"Features",Booster=new GradientBooster.Options(){SubsampleFraction=0.996045512009154F,FeatureFraction=1F,L1Regularization=2E-10F,L2Regularization=144.691275306985F}}));

            return pipeline;
        }
    }
}
